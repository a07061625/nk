/******/

// webpackBootstrap

// The module cache

// The require function

// Check if module is in cache

// Create a new module (and put it into the cache)

// Execute the module function

// Return the exports of the module

// Flag the module as loaded

// expose the modules object (__webpack_modules__)

// Load entry module and return exports

// expose the module cache

// define getter function for harmony exports

// define __esModule on exports

// create a fake namespace object

// mode & 1: value is a module id, require it

// mode & 2: merge all properties of value into the ns

// mode & 4: return value when already ns object

// mode & 8|1: behave like require

// getDefaultExport function for compatibility with non-harmony modules

// Object.prototype.hasOwnProperty.call

// __webpack_public_path__

/************************************************************************/

/* 0 */

/***/

/* 1 */

//////////////////////////////////////////////////////////////////////////////////

// Cloud Zoom V1.0.2.6

// (c) 2010 by R Cecco. <http://www.professorcloud.com>

// with enhancements by Philipp Andreas <https://github.com/smurfy/cloud-zoom>

//

// MIT License

// Please retain this copyright header in all versions of the software

// Display an image loading message. This message gets deleted when the images have loaded and the zoom init function is called.

// We add a small delay before the message is displayed to avoid the message flicking on then off again virtually immediately if the

// images load really fast, e.g. from the cache.

//var	ctx = this;

//						 <img src="/images/loading.gif"/>

// Removes cursor, tint layer, blur layer etc.

//$mouseTrap.unbind();

//ie6FixRemove();

// This is called when the zoom window has faded out so it can be removed.

//console.log(img.src + ' ' + id + ' ' + img.width);

//this.images[id] = img;

/* Init function start.  */

// Remove loading message (if present);

//////////////////////////////////////////////////////////////////////

/* Do as little as possible in mousemove event to prevent slowdown. */

/* Add a box (mouseTrap) over the small image to trap mouse events.
             It has priority over zoom window to avoid issues with inner zoom.
             We need the dummy background image as IE does not trap mouse events on
             transparent parts of a div.
             */

// Just update the mouse position

//event.data.removeBits();

//$('#info').text( xPos + ' ' + yPos + ' ' + siw + ' ' + sih );

// attach to the wrapper

// + opts.adjustY;

// + opts.adjustX;

// All other values, try and find an id in the dom to attach to.

// If dom element doesn't exit, just use 'right' position as default.

//+ opts.adjustX;

// Add the title from title tag.

// Fix ie6 select elements wrong z-index bug. Placing an iFrame over the select element solves the issue...

/* Work out size of cursor */

// Attach mouse, initially invisible to prevent first frame glitch

// Init tint layer if needed. (Not relevant if using inside mode)

// Start processing.

// IE6 background image flicker fix

// Hmm...eval...slap on wrist.

// Wrap an outer div around the link so we can attach things without them becoming part of the link.

// But not if wrap already exists.

// Destroy the previous zoom

// Change the biglink to point to the new big image.

// Change the small image to point to the new small image.

// Init a new zoom with the new images.
